<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Set Show Time</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
        }
        .header {
            background-color: #2d2d2d;
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 24px;
        }
        .date-select {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            padding: 15px;
        }
        .available.soldout {
            background-color: #dc3545; /* red */
            cursor: not-allowed;
        }
        .date-btn {
            margin: 5px;
            padding: 10px 15px;
            border: none;
            background-color: #ccc;
            border-radius: 4px;
            cursor: pointer;
        }
        .date-btn.today {
            background-color: #007bff;
            color: white;
        }
        .time-slots {
            padding: 20px;
            text-align: center;
        }
        .time-slot {
            margin: 10px;
        }
        .available {
            padding: 10px 15px;
            border: none;
            background-color: #28a745;
            color: white;
            border-radius: 4px;
            cursor: pointer;
        }
        .screen-info {
            font-size: 14px;
            margin-top: 10px;
            font-weight: bold;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
        }
        .modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            border-radius: 8px;
            width: 80%;
            max-width: 400px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .ticket-counter {
            margin: 10px 0;
        }
        .ticket-counter button {
            padding: 5px 10px;
            background-color: #ccc;
            border: none;
            cursor: pointer;
        }
        .ticket-counter span {
            padding: 5px 15px;
            background-color: #000;
            color: white;
            margin: 0 5px;
        }
        .pick-seats-btn {
            padding: 10px 20px;
            background-color: #d4a017;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .close {
            float: right;
            font-size: 20px;
            cursor: pointer;
        }
        .legend {
            text-align: center;
            margin: 20px;
        }
        .legend span {
            display: inline-block;
            margin: 0 15px;
        }
        .seats-available, .not-available {
            display: inline-block;
            vertical-align: middle;
            margin-right: 5px;
        }
        .seats-available {
            background-color: #28a745;
        }
        .not-available {
            background-color: #dc3545;
        }
    </style>
</head>
<body>

    <div class="header">Cinema Booking</div>

    <div class="date-select">
        <% const dates = Object.keys(groupedByDate); %>
        <% const firstDate = dates[0]; %>
        <% dates.forEach((date, index) => { %>
            <button 
                class="date-btn <%= date === firstDate ? 'today' : '' %>" 
                data-date="<%= date %>"><%= date %>
            </button>
        <% }) %>
    </div>

    <div id="showtimes-container">
        <% for (const date in groupedByDate) { %>
            <div class="time-slots date-group" data-date="<%= date %>" style="display: <%= date === firstDate ? 'block' : 'none' %>;">
                <% groupedByDate[date].forEach(slot => { %>
                    <div class="time-slot">
                        <button 
                            class="available" 
                            data-datetime="<%= slot.dateTimeISO %>"
                            data-available="<%= slot.availableSeats %>"
                            onclick="showSeatSelection('<%= slot.time %>', '<%= slot.screen %>', '<%= date %>', '<%= product._id %>', '<%= product.name %>', <%= slot.availableSeats %>)">
                            <%= slot.time %>
                        </button>
                        <div class="screen-info">
                            Screen <%= slot.screen %> - Available: <%= slot.availableSeats %> seats
                        </div>
                    </div>
                <% }) %>
            </div>
        <% } %>
    </div>

    <div class="modal" id="seatSelectionModal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2 id="movieTitle"><%= product.name %></h2>
            <div id="showDetails"></div>
            <div class="ticket-counter">
                <button onclick="updateTickets(-1)">-</button>
                <span id="ticketCount">1</span>
                <button id="plusBtn" onclick="updateTickets(1)">+</button>
            </div>
            <p style="font-size: 14px; color: gray; margin-top: 5px;">
                Max <span id="maxSeatsText">7</span> seats available
            </p>
            <button class="pick-seats-btn" onclick="pickSeats()">Pick Your Seats</button>
        </div>
    </div>

    <div class="legend">
        <span><div class="not-available" style="width: 12px; height: 12px; border-radius: 50%;"></div> Not Available</span>
        <span><div class="seats-available" style="width: 12px; height: 12px; border-radius: 50%;"></div> Seats Available</span>
    </div>

    <script>
        const dateButtons = document.querySelectorAll('.date-btn');
        const allGroups = document.querySelectorAll('.date-group');
        const modal = document.getElementById('seatSelectionModal');
        let ticketCount = 1;
        let selectedScreen = '';
        let selectedDate = '';
        let selectedTime = ''; // Store original time for display

        // Function to select the first date and show its time slots
        function selectFirstDate() {
            const firstButton = dateButtons[0];
            if (firstButton) {
                const date = firstButton.dataset.date;
                // Remove 'today' class from all buttons
                dateButtons.forEach(btn => btn.classList.remove('today'));
                // Add 'today' class to the first button
                firstButton.classList.add('today');
                // Hide all date groups
                allGroups.forEach(group => group.style.display = 'none');
                // Show the first date's group
                const firstGroup = document.querySelector(`.date-group[data-date="${date}"]`);
                if (firstGroup) {
                    firstGroup.style.display = 'block';
                }
            }
        }

        // Call selectFirstDate on page load
        document.addEventListener('DOMContentLoaded', () => {
            selectFirstDate();

            // Existing logic for disabling buttons
            const now = new Date();
            document.querySelectorAll('.available').forEach(btn => {
                const showTime = new Date(btn.dataset.datetime);
                const diffMinutes = (showTime - now) / (1000 * 60);
                const availableSeats = parseInt(btn.dataset.available, 10);

                // Case 1: Show is sold out
                if (availableSeats === 0) {
                    btn.disabled = true;
                    btn.classList.add('soldout');
                }
                // Case 2: Show starting within 15 mins
                else if (diffMinutes <= 15 && diffMinutes > 0) {
                    btn.disabled = true;
                    btn.classList.add('soldout');
                }
                // Case 3: Show already started
                else if (diffMinutes <= 0) {
                    btn.disabled = true;
                    btn.classList.add('soldout');
                }
            });
        });

        dateButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                const date = btn.dataset.date;
                allGroups.forEach(group => group.style.display = 'none');
                document.querySelector(`.date-group[data-date="${date}"]`).style.display = 'block';
                dateButtons.forEach(b => b.classList.remove('today'));
                btn.classList.add('today');
            });
        });

        let maxSeatsAllowed = 7; // default

        function showSeatSelection(time, screen, date, movieId, movieName, availableSeats) {
            selectedScreen = screen;
            selectedDate = date;
            selectedTime = time;
            maxSeatsAllowed = Math.min(7, availableSeats); // cap by available seats
            ticketCount = 1; // reset to 1
            document.getElementById('maxSeatsText').textContent = maxSeatsAllowed;
            document.getElementById('ticketCount').textContent = ticketCount;
            document.getElementById('showDetails').textContent = `${date} ${time}`;
            modal.style.display = 'block';
        }

        function closeModal() {
            modal.style.display = 'none';
            selectedScreen = '';
            selectedDate = '';
        }

        function updateTickets(change) {
            ticketCount = Math.max(1, ticketCount + change);
            document.getElementById('ticketCount').textContent = ticketCount;
            const plusBtn = document.getElementById('plusBtn');
            plusBtn.disabled = ticketCount === maxSeatsAllowed;
            const minusBtn = document.querySelector('.ticket-counter button:first-child');
            minusBtn.disabled = ticketCount === 1; // disable when only 1 ticket
        }

        function pickSeats() {
            const ticketCount = document.getElementById('ticketCount').textContent;
            const movieId = '<%= product._id %>';
            let date;
            try {
                const dateObj = new Date(selectedDate);
                date = dateObj.toISOString().split('T')[0];
            } catch (e) {
                console.error('Error formatting date:', e);
                date = selectedDate;
            }
            const screen = selectedScreen;
            const time = selectedTime;
            window.location.href = `/book/${movieId}?time=${encodeURIComponent(time)}&date=${encodeURIComponent(date)}&screen=${encodeURIComponent(screen)}&tickets=${ticketCount}`;
            closeModal();
        }

        window.onclick = function(event) {
            if (event.target == modal) {
                closeModal();
            }
        }

        window.addEventListener("pageshow", function (event) {
            if (sessionStorage.getItem("paymentDone") === "true") {
                if (event.persisted || 
                    (window.performance && window.performance.getEntriesByType("navigation")[0].type === "back_forward")) {
                    window.location.replace("/");
                }
            }
        });
    </script>
</body>
</html>