<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Summary</title>
    <style>
        body { font-family: Arial, sans-serif; padding: 20px; }
        .header { background-color: #f4a261; color: white; padding: 10px; text-align: center; }
        .summary { background-color: #fff; padding: 20px; border-radius: 10px; margin-top: 20px; }
        .summary div { margin-bottom: 10px; }
        .total { font-weight: bold; color: #2a9d8f; }
        .continue-btn { background-color: #264653; color: white; padding: 10px 20px; border: none; border-radius: 5px; cursor: pointer; }
    </style>
</head>
<body>
    <div class="header">
        <h2>ORDER SUMMARY</h2>
    </div>
    <div class="summary">
        <div><strong>Film Name :</strong> <%= name %></div>
        <div><strong>Show Date & Time :</strong> <%= date %>, <%= time %></div>
        <div><strong>Screen :</strong> <%= screen %></div>
        <div><strong>Seats :</strong> <%= selectedSeats.join(', ') %></div>
        <div><strong><%= selectedSeats.length %> Ticket</strong> <span class="total">₹<%= totalAmount %> ✓</span></div>
        <div class="total">₹<%= totalAmount %></div>
        <button class="continue-btn" id="payBtn">CONTINUE</button>
    </div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
let paymentInProgress = false;

// Prevent back button navigation
function preventBackNavigation() {
    history.pushState(null, null, location.href);

    window.addEventListener('popstate', function(event) {
        history.pushState(null, null, location.href);
    });
}

// Initialize back button prevention when page loads
document.addEventListener('DOMContentLoaded', function() {
    preventBackNavigation();
});

document.getElementById("payBtn").onclick = async function () {
    try {
        paymentInProgress = true;
        
        // Prepare booking data
        const bookingData = {
            productId: "<%= productId %>",
            amount: <%= totalAmount %>,
            name: "<%= name %>",
            date: "<%= date %>",
            time: "<%= time %>",
            screen: "<%= screen %>",
            selectedSeats: <%- JSON.stringify(selectedSeats) %>
        };

        // Create Razorpay order
        const orderData = await fetch("/create-order", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(bookingData)
        }).then(res => res.json());

        if (!orderData.id) {
            paymentInProgress = false;
            return Swal.fire({
                icon: "error",
                title: "Failed to create Razorpay order",
                text: "Please try again later."
            });
        }

        // Razorpay payment options
        const options = {
            key: "<%= razorpayKeyId %>",
            amount: orderData.amount,
            currency: "INR",
            name: "Your Cinema",
            description: "Ticket Payment",
            order_id: orderData.id,
            handler: async function (response) {
                try {
                    // Verify payment
                    const verifyRes = await fetch("/verify-payment", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(response)
                    }).then(res => res.json());

                    // Clear browser history to prevent going back
                    history.replaceState(null, null, location.href);
                    
                    if (verifyRes.success) {
                        await Swal.fire({
                            icon: "success",
                            title: "Payment Successful!",
                            text: "Your booking is confirmed. Check My Orders for details.",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            confirmButtonText: 'Go to Home'
                        });
                        // Use replace to prevent back navigation
                         sessionStorage.setItem("paymentDone", "true");
                        window.location.replace('/');
                    } else {
                        await Swal.fire({
                            icon: "error",
                            title: "Payment Failed!",
                            text: "Payment verification failed. Please try again.",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            confirmButtonText: 'Go to Home'
                        });
                         sessionStorage.setItem("paymentDone", "true");
                        window.location.replace('/');
                    }
                } catch (err) {
                    console.error("Payment verification error:", err);
                    history.replaceState(null, null, location.href);
                    await Swal.fire({
                        icon: "error",
                        title: "An error occurred!",
                        text: "Please try again later.",
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        confirmButtonText: 'Go to Home'
                    });
                    window.location.replace('/');
                }
                paymentInProgress = false;
            },
            modal: {
                ondismiss: function() {
                    paymentInProgress = false;
                    // Clear browser history and redirect to home
                    history.replaceState(null, null, location.href);
                    Swal.fire({
                        icon: 'info',
                        title: 'Payment Cancelled',
                        text: 'You cancelled the payment process.',
                        confirmButtonText: 'Go to Home'
                    }).then(() => {
                        window.location.replace('/');
                         sessionStorage.setItem("paymentDone", "true");
                    });
                }
            },
            theme: { color: "#3399cc" }
        };

        // Open Razorpay payment
        const rzp = new Razorpay(options);
        rzp.open();

    } catch (err) {
        console.error("Payment error:", err);
        paymentInProgress = false;
        Swal.fire({
            icon: "error",
            title: "An error occurred!",
            text: "Please try again later."
        });
    }
};

// Prevent page refresh during payment
// window.addEventListener('beforeunload', function(e) {
//     if (paymentInProgress) {
//         e.preventDefault();
//         // e.returnValue = 'Payment is in progress. Are you sure you want to leave?';
//     }
// });

// Additional security: prevent going back using browser detection
window.addEventListener("pageshow", function (event) {
    // Only block back if payment has finished
    if (sessionStorage.getItem("paymentDone") === "true") {
        if (event.persisted || 
            (window.performance && window.performance.getEntriesByType("navigation")[0].type === "back_forward")) {
            window.location.replace("/");
        }
    }
});

</script>

</body>
</html>